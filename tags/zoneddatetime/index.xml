<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>ZonedDateTime on 朱言蹊</title><link>https://yanxizhu.com/tags/zoneddatetime/</link><description>Recent content in ZonedDateTime on 朱言蹊</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Tue, 16 Mar 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://yanxizhu.com/tags/zoneddatetime/index.xml" rel="self" type="application/rss+xml"/><item><title>JDK8新特性</title><link>https://yanxizhu.com/posts/jdk8/</link><pubDate>Tue, 16 Mar 2021 00:00:00 +0000</pubDate><guid>https://yanxizhu.com/posts/jdk8/</guid><description>一、lambda 多线程实现 /** * lambda多线程实现 */ @Test public void runnT(){ new Thread( ()-&amp;gt;{ System.out.println(&amp;#34;lambda实现多线程啦&amp;#34;); } ).start(); } 2、集合遍历 public List&amp;lt;User&amp;gt; createList(){ List&amp;lt;User&amp;gt; users = new ArrayList&amp;lt;User&amp;gt;(); User user1 = new User(); user1.setId(UUID.randomUUID().toString()); user1.setName(&amp;#34;李亦非&amp;#34;); user1.setAge(20); user1.setSex(Sex.WOMAN); User user2 = new User(); user2.setId(UUID.randomUUID().toString()); user2.setName(&amp;#34;张三&amp;#34;); user2.setAge(20); user2.setSex(Sex.MAN); User user3 = new User(); user3.setId(UUID.randomUUID().toString()); user3.setName(&amp;#34;刘三姐&amp;#34;); user3.setAge(25); user3.setSex(Sex.WOMAN); users.add(user1); users.add(user2); users.add(user3); return users; } @Test public void lambTest(){ List&amp;lt;User&amp;gt; users = createList(); Stream&amp;lt;User&amp;gt; userStream = users.</description></item></channel></rss>