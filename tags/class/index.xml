<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>class on 朱言蹊</title><link>https://willxwu.github.io/tags/class/</link><description>Recent content in class on 朱言蹊</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Thu, 17 Apr 2014 00:00:00 +0000</lastBuildDate><atom:link href="https://willxwu.github.io/tags/class/index.xml" rel="self" type="application/rss+xml"/><item><title>JAVA反射</title><link>https://willxwu.github.io/posts/class/</link><pubDate>Thu, 17 Apr 2014 00:00:00 +0000</pubDate><guid>https://willxwu.github.io/posts/class/</guid><description>获取反射对象的3种方法。通过反射创建对象、通过反射获取有参、无参、公有、私有构造方法。通过反射获取公有、私有成员变量并修改之。通过反射获取成员方法，并调用。通过反射泛型擦除，存值。通过读取配置文件运行反射方法。
package learn.javase.mycalss; import java.lang.reflect.Constructor; import java.lang.reflect.Field; import java.lang.reflect.Method; import java.util.ArrayList; import java.util.List; /** * 一、获取class的三种方式 * * 二、获取公有构造方法 * 注意： * 1、被反射的类必须是有空参数的构造器 * 2、构造方法必须是public的才能反射获取 * * 三、获取所有构造方法 * * @author Jole * */ public class ClassDemo { public static void main(String[] args) throws Exception{ // 方式1、.getClass() Person p = new Person(); Class c = p.getClass(); System.out.println(c); //方式2、类名.class Class c3 = Person.class; System.out.println(c3); //方式3、Class.forName(类全名); Class c2 = Class.</description></item></channel></rss>