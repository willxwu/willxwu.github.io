<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>源码分析 on Come Back</title><link>https://willxwu.github.io/tags/%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/</link><description>Recent content in 源码分析 on Come Back</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>© This post is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License，please give source if you wish to quote or reproduce.</copyright><lastBuildDate>Wed, 06 Jul 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://willxwu.github.io/tags/%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/index.xml" rel="self" type="application/rss+xml"/><item><title>JAVA8-Collector interface源码分析</title><link>https://willxwu.github.io/post/java8/13_collector-interface%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/</link><pubDate>Wed, 06 Jul 2022 00:00:00 +0000</pubDate><guid>https://willxwu.github.io/post/java8/13_collector-interface%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/</guid><description>Collector interface源码分析 源码 public interface Collector&amp;lt;T, A, R&amp;gt; { Supplier&amp;lt;A&amp;gt; supplier(); BiConsumer&amp;lt;A, T&amp;gt; accumulator(); Function&amp;lt;A, R&amp;gt; finisher(); BinaryOperator&amp;lt;A&amp;gt; combiner(); Set&amp;lt;Characteristics&amp;gt; characteristics(); } 说明： 1.T is the generic type of the items in the stream to be collected. 2.A is the type of the accumulator, the object on which the partial result will be accumulated during the collection process. 3.R is the type of the object (typically, but not always, the collection) resulting from the collect operation.</description></item></channel></rss>