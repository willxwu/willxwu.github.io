<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Dockerfile on Come Back</title><link>https://willxwu.github.io/tags/dockerfile/</link><description>Recent content in Dockerfile on Come Back</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>© This post is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License，please give source if you wish to quote or reproduce.</copyright><lastBuildDate>Sun, 17 Apr 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://willxwu.github.io/tags/dockerfile/index.xml" rel="self" type="application/rss+xml"/><item><title>Dockerfile技巧</title><link>https://willxwu.github.io/post/docker/07_dockerfile%E9%80%82%E7%94%A8%E6%8A%80%E5%B7%A7/</link><pubDate>Sun, 17 Apr 2022 00:00:00 +0000</pubDate><guid>https://willxwu.github.io/post/docker/07_dockerfile%E9%80%82%E7%94%A8%E6%8A%80%E5%B7%A7/</guid><description>&lt;h1 id="dockerfile技巧">Dockerfile技巧&lt;/h1>
&lt;h2 id="一docker-build缓存">一、Docker build缓存&lt;/h2>
&lt;p>当build镜像时，如果Docker build文件发生变化或者build镜像分层某一层发生变化就不会使用cache缓存。&lt;/p>
&lt;p>技巧：将Dockerfile中经常发生改变的放到后面，不发生改变的发前面。这样就算最后发生改变的不能使用cache缓存，但前面没变化也会加快build的速度。&lt;/p>
&lt;h2 id="docker-build-context">Docker build context&lt;/h2>
&lt;p>Docker是client-server架构，理论上Client和Server可以不在一台机器上。&lt;/p>
&lt;p>在构建docker镜像的时候，需要把所需要的文件由CLI（client）发给Server，这些文件实际上就是build context。&lt;/p></description></item></channel></rss>