<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>applyToEither on Come Back</title><link>https://willxwu.github.io/tags/applytoeither/</link><description>Recent content in applyToEither on Come Back</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>© This post is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License，please give source if you wish to quote or reproduce.</copyright><lastBuildDate>Tue, 19 Jul 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://willxwu.github.io/tags/applytoeither/index.xml" rel="self" type="application/rss+xml"/><item><title>JAVA8-CompletableFuturerunAfterBoth、applyToEither、acceptEither 、runAfterEither 、allOf、anyOf</title><link>https://willxwu.github.io/post/java8/23_ava8-completablefuture%E5%B8%B8%E7%94%A8apirunafterbothapplytoeitheraccepteither-runaftereither-allofanyof/</link><pubDate>Tue, 19 Jul 2022 00:00:00 +0000</pubDate><guid>https://willxwu.github.io/post/java8/23_ava8-completablefuture%E5%B8%B8%E7%94%A8apirunafterbothapplytoeitheraccepteither-runaftereither-allofanyof/</guid><description>AVA8-CompletableFuture常用API：runAfterBoth、applyToEither、acceptEither 、runAfterEither 、allOf、anyOf 1、runAfterBoth ：2个CompletableFuture都执行完后,再执行其它操作 package com.example.study.java8.completableFutures.api; import java.util.concurrent.CompletableFuture; public class CompletableFutureAction2 { public static void main(String[] args) throws InterruptedException { //API-- 1、runAfterBoth: 2个都执行完后,再执行其它操作 CompletableFuture.supplyAsync(() -&amp;gt; { System.out.println(Thread.currentThread().getName() + &amp;#34;this is runing 1......&amp;#34;); return 1; }) .runAfterBoth(CompletableFuture.supplyAsync(() -&amp;gt; { System.out.println(Thread.currentThread().getName() + &amp;#34;this is runing 2......&amp;#34;); return 2; }), () -&amp;gt; System.out.println(&amp;#34;done&amp;#34;)); //为了防止主线程结束后，守护线程被关闭，模拟修改10000毫秒 Thread.sleep(10000); } } 输出结果：
ForkJoinPool.commonPool-worker-5this is runing 2...... ForkJoinPool.commonPool-worker-19this is runing 1...... done 2、 applyToEither：其中一个CompletableFuture执行完，就将结果传给另一个Fuction package com.example.study.java8.completableFutures.api; import java.</description></item></channel></rss>