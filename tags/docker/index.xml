<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>docker on Come Back</title><link>https://willxwu.github.io/tags/docker/</link><description>Recent content in docker on Come Back</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>© This post is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License，please give source if you wish to quote or reproduce.</copyright><lastBuildDate>Fri, 27 May 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://willxwu.github.io/tags/docker/index.xml" rel="self" type="application/rss+xml"/><item><title>Docker安装ShowDoc ssl https nginx配置</title><link>https://willxwu.github.io/post/nginx/showdoc-ssl-https-nginx%E9%85%8D%E7%BD%AE/</link><pubDate>Fri, 27 May 2022 00:00:00 +0000</pubDate><guid>https://willxwu.github.io/post/nginx/showdoc-ssl-https-nginx%E9%85%8D%E7%BD%AE/</guid><description>&lt;h1 id="docker安装showdoc-ssl-https-nginx配置">Docker安装ShowDoc ssl https nginx配置&lt;/h1>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/willxwu/CDN@main/images/202211292110216.png" alt="image-20221129211012004">&lt;/p>
&lt;h1 id="一docker安装showdoc">一、docker安装showdoc&lt;/h1>
&lt;h3 id="1拉取镜像">1、拉取镜像&lt;/h3>
&lt;p>&lt;em># 中国大陆镜像安装命令（安装后记得执行docker tag命令以进行重命名）&lt;/em>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>docker pull registry.cn-shenzhen.aliyuncs.com/star7th/showdoc
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>docker tag registry.cn-shenzhen.aliyuncs.com/star7th/showdoc:latest star7th/showdoc:latest
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Docker开启Remote API访问</title><link>https://willxwu.github.io/post/cicd/docker%E5%BC%80%E5%90%AFremote-api%E8%AE%BF%E9%97%AE-2375%E7%AB%AF%E5%8F%A3/</link><pubDate>Tue, 19 Apr 2022 00:00:00 +0000</pubDate><guid>https://willxwu.github.io/post/cicd/docker%E5%BC%80%E5%90%AFremote-api%E8%AE%BF%E9%97%AE-2375%E7%AB%AF%E5%8F%A3/</guid><description>&lt;h1 id="docker开启remote-api访问">Docker开启Remote API访问&lt;/h1>
&lt;h2 id="方法一">方法一&lt;/h2>
&lt;p>1、修改/usr/lib/systemd/system/docker.service配置，在[Service]部分ExecStart后面添加配置。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>-H tcp://0.0.0.0:2375
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>修改后如下：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>Service&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Type&lt;span style="color:#f92672">=&lt;/span>notify
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># the default is not to use systemd for cgroups because the delegate issues still&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># exists and systemd currently does not support the cgroup feature set required&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># for containers run by docker&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ExecStart&lt;span style="color:#f92672">=&lt;/span>/usr/bin/dockerd -H fd:// --containerd&lt;span style="color:#f92672">=&lt;/span>/run/containerd/containerd.sock -H tcp://0.0.0.0:2375
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ExecReload&lt;span style="color:#f92672">=&lt;/span>/bin/kill -s HUP $MAINPID
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>TimeoutSec&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>RestartSec&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Restart&lt;span style="color:#f92672">=&lt;/span>always
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Docker安装Jenkins自动部署SpringBoot项目</title><link>https://willxwu.github.io/post/cicd/docker%E5%AE%89%E8%A3%85jenkins%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2springboot%E9%A1%B9%E7%9B%AE/</link><pubDate>Mon, 18 Apr 2022 00:00:00 +0000</pubDate><guid>https://willxwu.github.io/post/cicd/docker%E5%AE%89%E8%A3%85jenkins%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2springboot%E9%A1%B9%E7%9B%AE/</guid><description>&lt;h1 id="docker安装jenkins自动部署springboot项目">Docker安装Jenkins自动部署SpringBoot项目&lt;/h1>
&lt;p>根据之前文章《&lt;a href="https://www.yanxizhu.com/index.php/archives/138/">使用Docker安装好Jenkins&lt;/a>》为前提搭建好Jenkins，不明白请看https://www.yanxizhu.com/index.php/archives/138/。&lt;/p>
&lt;p>环境说明：jenkins为docker部署，Docker+Jenkins+Gitee+JDK11+Maven3.8.5。&lt;/p>
&lt;p>&lt;strong>以后每次改动代码，push提交到giee码云后会自动部署，不用手动点击部署。&lt;/strong>&lt;/p>
&lt;h1 id="一全局工具配置">一、全局工具配置&lt;/h1>
&lt;p>【首页】-【系统管理】-【全局工具配置】&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/willxwu/CDN@main/images/202205092255415.png" alt="">&lt;/p>
&lt;p>我之前启动jenkins容器映射参数如下，根据自己映射路径自行修改。&lt;/p></description></item><item><title>Dockerfile技巧</title><link>https://willxwu.github.io/post/docker/07_dockerfile%E9%80%82%E7%94%A8%E6%8A%80%E5%B7%A7/</link><pubDate>Sun, 17 Apr 2022 00:00:00 +0000</pubDate><guid>https://willxwu.github.io/post/docker/07_dockerfile%E9%80%82%E7%94%A8%E6%8A%80%E5%B7%A7/</guid><description>&lt;h1 id="dockerfile技巧">Dockerfile技巧&lt;/h1>
&lt;h2 id="一docker-build缓存">一、Docker build缓存&lt;/h2>
&lt;p>当build镜像时，如果Docker build文件发生变化或者build镜像分层某一层发生变化就不会使用cache缓存。&lt;/p>
&lt;p>技巧：将Dockerfile中经常发生改变的放到后面，不发生改变的发前面。这样就算最后发生改变的不能使用cache缓存，但前面没变化也会加快build的速度。&lt;/p>
&lt;h2 id="docker-build-context">Docker build context&lt;/h2>
&lt;p>Docker是client-server架构，理论上Client和Server可以不在一台机器上。&lt;/p>
&lt;p>在构建docker镜像的时候，需要把所需要的文件由CLI（client）发给Server，这些文件实际上就是build context。&lt;/p></description></item><item><title>Docker安装Jenkins</title><link>https://willxwu.github.io/post/cicd/docker%E5%AE%89%E8%A3%85jenkins/</link><pubDate>Sat, 16 Apr 2022 00:00:00 +0000</pubDate><guid>https://willxwu.github.io/post/cicd/docker%E5%AE%89%E8%A3%85jenkins/</guid><description>Docker安装Jenkins jdk安装 下载jdk解压到个人安装目录
/mydata/jdk/jdk-11.0.10 maven安装 下载maven解压到个人安装目录
/mydata/maven/apache-maven-3.8.5 修改mavne配置文件setting.xml，设置本地仓库目录
&amp;lt;localRepository&amp;gt;/mydata/maven/repo&amp;lt;/localRepository&amp;gt; 添加阿里云镜像，在mirrors节点下增加以下内容
&amp;lt;mirrors&amp;gt; &amp;lt;mirror&amp;gt; &amp;lt;id&amp;gt;alimaven&amp;lt;/id&amp;gt; &amp;lt;mirrorOf&amp;gt;central&amp;lt;/mirrorOf&amp;gt; &amp;lt;name&amp;gt;aliyun maven&amp;lt;/name&amp;gt; &amp;lt;url&amp;gt;http://maven.aliyun.com/nexus/content/repositories/central/&amp;lt;/url&amp;gt; &amp;lt;/mirror&amp;gt; &amp;lt;/mirrors&amp;gt; 开启Docker Remote API 关闭防火墙 或者 开启防火墙的端口 #关闭防火墙 systemctl stop firewalld.service # 禁止firewall开机启动 systemctl disable firewalld.service # 或者允许固定端口 firewall-cmd --zone=public --add-port=2375/tcp --permanent firewall-cmd --reload Docker环境下安装Jenkins 拉取最新的Jenkins的docker镜像
docker pull jenkins/jenkins:lts 启动Jenkins容器
docker run -p 10240:8080 -p 10241:50000 --name jenkins \ -u root \ -v /mydata/jenkins_home:/var/jenkins_home \ -v /mydata/maven/apache-maven-3.8.5:/maven/apache-maven-3.8.5 \ -v /mydata/jdk/jdk-11.0.10/:/jdk/jdk-11.0.10 \ -v /mydata/maven/repo:/mydata/maven/repo \ -d jenkins/jenkins:lts 注意：自己的目录和端口是否相同，不同请求修改。</description></item><item><title>Docker部署Kafka</title><link>https://willxwu.github.io/post/cicd/docker%E9%83%A8%E7%BD%B2kafka/</link><pubDate>Fri, 15 Apr 2022 00:00:00 +0000</pubDate><guid>https://willxwu.github.io/post/cicd/docker%E9%83%A8%E7%BD%B2kafka/</guid><description>Docker部署Kafka 一、拉取镜像 docker pull wurstmeister/zookeeper docker pull wurstmeister/kafka 二、启动zookpeer docker run -d --name zookeeper -p 2181:2181 -t wurstmeister/zookeeper 三、启动kafka docker run -d --name kafka \ -p 9092:9092 \ -e KAFKA_BROKER_ID=0 \ -e KAFKA_ZOOKEEPER_CONNECT=192.168.56.10:2181 \ -e KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://192.168.56.10:9092 \ -e KAFKA_LISTENERS=PLAINTEXT://0.0.0.0:9092 wurstmeister/kafka 注意修改自己ip地址
四、测试 1、进入kafka容器 docker exec -it kafka bash 2、进入kafak脚本目录 cd /opt/kafka_2.13-2.8.1/bin 注意修改自己kafka版本
3、创建主题 kafka-topics.sh --create --zookeeper 192.168.56.10:2181 --replication-factor 1 --partitions 1 --topic topic_1 这里创建了一个topic_1主题。
4、添加消息 生产者发送消息
kafka-console-producer.sh --broker-list 192.168.56.10:9092 --topic topic_1 此时进入发送消息界面：</description></item><item><title>Docker安装Kibana</title><link>https://willxwu.github.io/post/cicd/docker%E5%AE%89%E8%A3%85kibana/</link><pubDate>Thu, 14 Apr 2022 00:00:00 +0000</pubDate><guid>https://willxwu.github.io/post/cicd/docker%E5%AE%89%E8%A3%85kibana/</guid><description>Docker安装Kibana
一、拉取镜像，可视化检索数据
docker pull kibana:7.4.2 二、启动运行容器
docker run --name kibana -e ELASTICSEARCH_HOSTS=http://192.168.1.10:9200 -p 5601:5601 \ -d kibana:7.4.2 注意：更改自己的ip，es端口，以及和es版本号对应。</description></item><item><title>Docker安装ES</title><link>https://willxwu.github.io/post/cicd/docker-%E5%AE%89%E8%A3%85es/</link><pubDate>Wed, 13 Apr 2022 00:00:00 +0000</pubDate><guid>https://willxwu.github.io/post/cicd/docker-%E5%AE%89%E8%A3%85es/</guid><description>&lt;hr>
&lt;p>一、下载镜像文件，存储和检索数据&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>docker pull elasticsearch:7.4.2
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>二、创建实例&lt;/p>
&lt;p>创建文件，用于映射&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>mkdir -p /mydata/elasticsearch/config
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mkdir -p /mydata/elasticsearch/data
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>echo &lt;span style="color:#e6db74">&amp;#34;http.host: 0.0.0.0&amp;#34;&lt;/span> &amp;gt;&amp;gt; /mydata/elasticsearch/config/elasticsearch.yml
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Docker安装RabbitMQ</title><link>https://willxwu.github.io/post/cicd/docker%E5%AE%89%E8%A3%85rabbitmq/</link><pubDate>Tue, 12 Apr 2022 00:00:00 +0000</pubDate><guid>https://willxwu.github.io/post/cicd/docker%E5%AE%89%E8%A3%85rabbitmq/</guid><description>Docker安装RabbitMQ 运行RabbitMQ容器 第一次运行没有RabbitMQ镜像，会自动下载。
docker run -d --name rabbitmq -p 5671:5671 -p 5672:5672 -p 4369:4369 -p 25672:25672 -p 15671:15671 -p 15672:15672 rabbitmq:management 说明：
4369, 25672 (Erlang发现&amp;amp;集群端口) 5672, 5671 (AMQP端口) 15672 (web管理后台端口) 61613, 61614 (STOMP协议端口) 1883, 8883 (MQTT协议端口) https://www.rabbitmq.com/networking.html
设置随docker启动 docker update --restart=always rabbitmq 访问RabbitMQ 通过ip地址加15672端口即可访问，初始账号密码guest</description></item><item><title>docker安装redis</title><link>https://willxwu.github.io/post/cicd/docker%E5%AE%89%E8%A3%85redis/</link><pubDate>Mon, 11 Apr 2022 00:00:00 +0000</pubDate><guid>https://willxwu.github.io/post/cicd/docker%E5%AE%89%E8%A3%85redis/</guid><description>&lt;h1 id="docker安装redis">docker安装redis&lt;/h1>
&lt;hr>
&lt;h1 id="一docker拉取redis镜像">一、docker拉取redis镜像&lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>docker pull redis
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="二创建实例并启动">二、创建实例并启动&lt;/h1>
&lt;p>创建映射配置文件路径&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>mkdir -p /mydata/redis/conf
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>touch /mydata/redis/conf/redis.conf
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>创建启动&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>docker run -p 6379:6379 --name redis -v /mydata/redis/data:/data &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span>-v /mydata/redis/conf/redis.conf:/etc/redis/redis.conf &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span>-d redis redis-server /etc/redis/redis.conf
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Docker安装Nginx</title><link>https://willxwu.github.io/post/cicd/docker%E5%AE%89%E8%A3%85nginx/</link><pubDate>Sat, 09 Apr 2022 00:00:00 +0000</pubDate><guid>https://willxwu.github.io/post/cicd/docker%E5%AE%89%E8%A3%85nginx/</guid><description>&lt;h1 id="一docker安装nginx">一、Docker安装Nginx&lt;/h1>
&lt;ol>
&lt;li>
&lt;p>拉取Nginx镜像&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>docker pull nginx:1.10
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>随便启动一个nginx 实例，只是为了复制出配置&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>docker run -p 80:80 --name nginx -d nginx:1.10
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ol></description></item><item><title>Docker安装PHP</title><link>https://willxwu.github.io/post/cicd/docker%E5%AE%89%E8%A3%85php/</link><pubDate>Fri, 08 Apr 2022 00:00:00 +0000</pubDate><guid>https://willxwu.github.io/post/cicd/docker%E5%AE%89%E8%A3%85php/</guid><description>&lt;h1 id="docker安装php">Docker安装PHP&lt;/h1>
&lt;ol>
&lt;li>
&lt;p>拉取PHP镜像&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>docker pull php:7.4-fpm
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>运输PHP容器&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>docker run -d -v /mydata/nginx/html:/var/www/html -p 9000:9000 --link mysql:mysql --name php php:7.4-fpm
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>进入PHP容器&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>docker exec -it php /bin/bash
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ol></description></item><item><title>Docker安装MySQL</title><link>https://willxwu.github.io/post/cicd/docker%E5%AE%89%E8%A3%85mysql/</link><pubDate>Thu, 07 Apr 2022 00:00:00 +0000</pubDate><guid>https://willxwu.github.io/post/cicd/docker%E5%AE%89%E8%A3%85mysql/</guid><description>&lt;p>安装前提，已经搭建好Docker环境，关于docker安装可参考我另一篇文章&lt;a href="https://www.yanxizhu.com/index.php/archives/6/">《Docker安装》&lt;/a>&lt;/p>
&lt;h1 id="一docker安装mysql">一、Docker安装MySQL&lt;/h1>
&lt;ol>
&lt;li>
&lt;p>拉取Docker镜像&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>docker pull mysql:5.7
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>运行MySQL容器,参数说明见-说明1&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>docker run -p 3306:3306 --name mysql &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span>-v /mydata/mysql/log:/var/log/mysql &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span>-v /mydata/mysql/data:/var/lib/mysql &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span>-v /mydata/mysql/conf:/etc/mysql &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span>-e MYSQL_ROOT_PASSWORD&lt;span style="color:#f92672">=&lt;/span>密码 &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span>-d mysql:5.7
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ol></description></item><item><title>Docker常用命令</title><link>https://willxwu.github.io/post/cicd/docker%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</link><pubDate>Wed, 06 Apr 2022 00:00:00 +0000</pubDate><guid>https://willxwu.github.io/post/cicd/docker%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</guid><description>&lt;h1 id="一镜像">一、镜像&lt;/h1>
&lt;ol>
&lt;li>
&lt;p>查看docker容器镜像&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>docker images
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>拉去容器镜像&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>docker pull 容器
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>删除容器镜像&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>docker rmi 容器
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ol></description></item><item><title>Docker数据存储</title><link>https://willxwu.github.io/post/docker/06_docker%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8/</link><pubDate>Tue, 05 Apr 2022 00:00:00 +0000</pubDate><guid>https://willxwu.github.io/post/docker/06_docker%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8/</guid><description>&lt;h1 id="docker数据存储">Docker数据存储&lt;/h1>
&lt;p>默认情况下，在运行中的容器里创建的文件，被保存在一个可写的容器层：&lt;/p>
&lt;ul>
&lt;li>如果容器被删除了，则数据也没有了&lt;/li>
&lt;li>这个可写的容器层是和特定的容器绑定的，也就是这些数据无法方便的和其它容器共享&lt;/li>
&lt;/ul>
&lt;p>Docker主要提供了两种方式做数据的持久化&lt;/p></description></item><item><title>Docker镜像创建、镜像push</title><link>https://willxwu.github.io/post/docker/05_docker%E9%95%9C%E5%83%8F%E5%88%9B%E5%BB%BA%E9%95%9C%E5%83%8Fpush/</link><pubDate>Mon, 04 Apr 2022 00:00:00 +0000</pubDate><guid>https://willxwu.github.io/post/docker/05_docker%E9%95%9C%E5%83%8F%E5%88%9B%E5%BB%BA%E9%95%9C%E5%83%8Fpush/</guid><description>&lt;h1 id="镜像创建镜像push">镜像创建、镜像push&lt;/h1>
&lt;h1 id="是什么">是什么&lt;/h1>
&lt;p>Dockerfile是用于构建docker镜像的文件&lt;/p>
&lt;p>Dockerfile里包括了构建镜像所需的“指令”&lt;/p>
&lt;p>Dockerfile有其特定的语法规则&lt;/p></description></item><item><title>Docker基础镜像的选择</title><link>https://willxwu.github.io/post/docker/04_docker%E5%9F%BA%E7%A1%80%E9%95%9C%E5%83%8F%E7%9A%84%E9%80%89%E6%8B%A9-from/</link><pubDate>Sun, 03 Apr 2022 00:00:00 +0000</pubDate><guid>https://willxwu.github.io/post/docker/04_docker%E5%9F%BA%E7%A1%80%E9%95%9C%E5%83%8F%E7%9A%84%E9%80%89%E6%8B%A9-from/</guid><description>&lt;h1 id="基础镜像的选择-from">基础镜像的选择 (FROM)&lt;/h1>
&lt;ul>
&lt;li>官方镜像优于非官方的镜像，如果没有官方镜像，则尽量选择Dockerfile开源的&lt;/li>
&lt;li>固定版本tag而不是每次都使用latest&lt;/li>
&lt;li>尽量选择体积小的镜像&lt;/li>
&lt;/ul>
&lt;p>空镜像：scratch&lt;/p>
&lt;p>最小镜像：alpine&lt;/p></description></item><item><title>Docker镜像获取方式</title><link>https://willxwu.github.io/post/docker/03_docker%E9%95%9C%E5%83%8F%E8%8E%B7%E5%8F%96%E6%96%B9%E5%BC%8F/</link><pubDate>Sun, 03 Apr 2022 00:00:00 +0000</pubDate><guid>https://willxwu.github.io/post/docker/03_docker%E9%95%9C%E5%83%8F%E8%8E%B7%E5%8F%96%E6%96%B9%E5%BC%8F/</guid><description>&lt;h1 id="docker镜像获取方式">Docker镜像获取方式&lt;/h1>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/willxwu/CDN@main/images/202303181827457.png" alt="image-20230318182710371">&lt;/p>
&lt;h2 id="一pull-from-registry">一、pull from registry&lt;/h2>
&lt;p>必须在线，从registry拉取分公有和私有。公有，例如：dockerhub，私有，例如公司自己搭建的，只能公司内部访问。&lt;/p>
&lt;p>常用公有registry：需要注册账号。&lt;/p></description></item><item><title>Docker入门</title><link>https://willxwu.github.io/post/docker/02_docker%E5%85%A5%E9%97%A8/</link><pubDate>Sat, 02 Apr 2022 00:00:00 +0000</pubDate><guid>https://willxwu.github.io/post/docker/02_docker%E5%85%A5%E9%97%A8/</guid><description>&lt;p>&lt;strong>容器&lt;/strong>：一种打包技术。&lt;/p>
&lt;p>&lt;strong>docker&lt;/strong>：打包技术的一种技术实现。&lt;/p>
&lt;h1 id="一基础知识">一、基础知识&lt;/h1>
&lt;h2 id="基础命令">&lt;strong>基础命令&lt;/strong>&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>查看docker相关信息&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>docker versoin
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>查看docker环境信息&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>docker info
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ol></description></item><item><title>Docker安装</title><link>https://willxwu.github.io/post/docker/01_docker%E5%AE%89%E8%A3%85/</link><pubDate>Fri, 01 Apr 2022 00:00:00 +0000</pubDate><guid>https://willxwu.github.io/post/docker/01_docker%E5%AE%89%E8%A3%85/</guid><description>&lt;h1 id="一环境准备">一、环境准备&lt;/h1>
&lt;ol>
&lt;li>
&lt;p>备份原yum 源&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>mv /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.backup
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>CentOS设置新yum 源&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>使用阿里云Docker Yum源&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ol></description></item><item><title>Jenkins容器docker部署springboot项目-问题记录</title><link>https://willxwu.github.io/post/problem/jenkins%E5%AE%B9%E5%99%A8docker%E9%83%A8%E7%BD%B2springboot%E9%A1%B9%E7%9B%AE/</link><pubDate>Mon, 28 Mar 2022 00:00:00 +0000</pubDate><guid>https://willxwu.github.io/post/problem/jenkins%E5%AE%B9%E5%99%A8docker%E9%83%A8%E7%BD%B2springboot%E9%A1%B9%E7%9B%AE/</guid><description>&lt;h1 id="jenkins容器docker部署springboot项目-问题记录">Jenkins容器docker部署springboot项目-问题记录&lt;/h1>
&lt;h2 id="一docker容器内不能使用vim">一、docker容器内不能使用vim&lt;/h2>
&lt;p>解决方案：&lt;/p>
&lt;p>以root进入容器内&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>docker exec -it -user root jenkins /bin/bash
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>更新软件包&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>apt-get update
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>升级过程可能非常慢，因为是从海外站点拉取镜像，所以我们可以配置一个国内的镜像源，加速镜像拉取更新。&lt;/p></description></item></channel></rss>