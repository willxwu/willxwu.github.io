<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Docker on willxwu</title><link>https://willxwu.github.io/tags/docker/</link><description>Recent content in Docker on willxwu</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Sun, 28 Sep 2014 00:00:00 +0000</lastBuildDate><atom:link href="https://willxwu.github.io/tags/docker/index.xml" rel="self" type="application/rss+xml"/><item><title>Docker安装</title><link>https://willxwu.github.io/posts/docker/docker%E5%AE%89%E8%A3%85/</link><pubDate>Sun, 28 Sep 2014 00:00:00 +0000</pubDate><guid>https://willxwu.github.io/posts/docker/docker%E5%AE%89%E8%A3%85/</guid><description>一、环境准备 备份原yum 源
mv /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.backup CentOS设置新yum 源
wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo 使用阿里云Docker Yum源
yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo 生成缓存
yum makecache 卸载旧版本Docker
yum remove docker docker-common docker-selinux 二、安装Docker CE 安装需要的依赖包
yum install -y yum-utils device-mapper-persistent-data lvm2 安装
yum install docker-ce -y 启动docker
sudo systemctl start docker 设置开机启动
sudo systemctl enable docker 配置Docker 镜像加速
mkdir -p /etc/docker 在新建目录下新建daemon.json，内容如下:
{ &amp;#34;registry-mirrors&amp;#34;: [&amp;#34;https://bpavu6gm.mirror.aliyuncs.com&amp;#34;] } 重新加载配置文件
systemctl daemon-reload 重启docker
systemctl restart docker</description></item><item><title>Docker安装PHP</title><link>https://willxwu.github.io/posts/docker/docker%E5%AE%89%E8%A3%85php/</link><pubDate>Sun, 28 Sep 2014 00:00:00 +0000</pubDate><guid>https://willxwu.github.io/posts/docker/docker%E5%AE%89%E8%A3%85php/</guid><description>Docker安装PHP 拉取PHP镜像
docker pull php:7.4-fpm 运输PHP容器
docker run -d -v /mydata/nginx/html:/var/www/html -p 9000:9000 --link mysql:mysql --name php php:7.4-fpm 进入PHP容器
docker exec -it php /bin/bash PHP扩展安装(非必须)
docker-php-ext-install pdo_mysql 设置随Docke启动
docker update --restart=always php 注意：自己映射路径/mydata/nginx/html。</description></item><item><title>Docker安装RabbitMQ</title><link>https://willxwu.github.io/posts/docker/docker%E5%AE%89%E8%A3%85rabbitmq/</link><pubDate>Sun, 28 Sep 2014 00:00:00 +0000</pubDate><guid>https://willxwu.github.io/posts/docker/docker%E5%AE%89%E8%A3%85rabbitmq/</guid><description>Docker安装RabbitMQ 运行RabbitMQ容器 第一次运行没有RabbitMQ镜像，会自动下载。
docker run -d --name rabbitmq -p 5671:5671 -p 5672:5672 -p 4369:4369 -p 25672:25672 -p 15671:15671 -p 15672:15672 rabbitmq:management 说明：
4369, 25672 (Erlang发现&amp;amp;集群端口) 5672, 5671 (AMQP端口) 15672 (web管理后台端口) 61613, 61614 (STOMP协议端口) 1883, 8883 (MQTT协议端口) https://www.rabbitmq.com/networking.html
设置随docker启动 docker update --restart=always rabbitmq 访问RabbitMQ 通过ip地址加15672端口即可访问，初始账号密码guest</description></item><item><title>docker安装redis</title><link>https://willxwu.github.io/posts/docker/docker%E5%AE%89%E8%A3%85redis/</link><pubDate>Sun, 28 Sep 2014 00:00:00 +0000</pubDate><guid>https://willxwu.github.io/posts/docker/docker%E5%AE%89%E8%A3%85redis/</guid><description>docker安装redis 一、docker拉取redis镜像 docker pull redis 二、创建实例并启动 创建映射配置文件路径
mkdir -p /mydata/redis/conf touch /mydata/redis/conf/redis.conf 创建启动
docker run -p 6379:6379 --name redis -v /mydata/redis/data:/data \ -v /mydata/redis/conf/redis.conf:/etc/redis/redis.conf \ -d redis redis-server /etc/redis/redis.conf redis 自描述文件： https://raw.githubusercontent.com/antirez/redis/4.0/redis.conf
三、使用redis 镜像执行redis-cli 命令连接 docker exec -it redis redis-cli 四、设置随docker启动redis自动启动 docker update --restart=always redis 更多配置，请参考redis官网文档，https://redis.io/documentation。</description></item><item><title>Docker常用命令</title><link>https://willxwu.github.io/posts/docker/docker%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</link><pubDate>Sun, 28 Sep 2014 00:00:00 +0000</pubDate><guid>https://willxwu.github.io/posts/docker/docker%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</guid><description>一、镜像 查看docker容器镜像
docker images 拉去容器镜像
docker pull 容器 删除容器镜像
docker rmi 容器 二、容器 安装容器，-d后台运行，-v映射路径, -name容器名称, -link链接外部容器，-p 端口号映射，-e设置密码
docker run -d -v /mydata/nginx/html:/var/www/html -p 9000:9000 --link mysql:mysql --name php php:7.4-fpm 启动容器
docker start 容器 关闭容器
docker stop 容器 重启容器
docker restart 容器 查看运行容器
docker ps 查看所有容器
docker ps -s 删除容器
docker rm 容器 查询当前容器
docker container ls -all 删除未启动容器映射
docker container rm 容器 查看容器映射信息
docker inspect 容器 | grep Mounts -A 20 进入容器内部</description></item></channel></rss>